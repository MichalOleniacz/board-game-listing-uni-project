version: '3.9'
services:
  postgres:
    container_name: boardgamehub-core-db
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: boardgamehub
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - postgres
    ports:
      - "5432:5432"
    profiles:
      - db

  redis:
    container_name: boardgamehub-core-redis
    image: redis:7
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "6379:6379"
    networks:
      - postgres
    profiles:
      - db

  adminer:
    container_name: boardgamehub-core-db-adminer
    image: adminer
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - postgres
    ports:
      - 8081:8080

  backend:
    build: .
    container_name: boardgamehub-backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - postgres
    environment:
      - DEBUG=${DEBUG:-0}
    ports:
      - "8080:8080"
      - "5005:5005"
    profiles:
      - full

  nginx:
    image: nginx:stable
    container_name: nginx_proxy
    ports:
      - "8000:8000"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - appnet
    profiles:
      - proxy

networks:
  postgres:
    driver: bridge
  appnet:
    driver: bridge

volumes:
  postgres:
